[v] Merge center derived classes into center
[v] Make a StudyCenter object
[v] Make (pnumber, study) unique instead of just pnumber
[v] *Rethink OriginInfo and ShipmentInfo
[v] SendsShipments on clinic was to be replaced with what on ShippingMethod?
[~] Include version table and value in it to check for automatic updating
[v] Specimens should never have more than one CollectionEvent or Patient
    (per Study).
[v] Vessel refactoring: put inventoryId in the vessel and give the Specimen
    a reference to a vessel and a position in that vessel?
    A: sort of, just used ContainerType-s and Container-s (with derivatives)
    for representing Vessels too (i.e. as SpecimenContainer[Type]s).
[ ] *How to deal with duplicate ids? Namespaces (e.g. distributer)? Unique per container?
	Q: ask CBSR!!
[x] Have custom Id objects and rename getId() to getInternalId() and add a
    @Transient getId() method that returns typed ids. setInternalId() can then
    be overridden to also call setId(new TypedId(id)) and setId() can be overridden
    to also call setInternalId(getId().id), avoiding recursion, of course.
    A: NOOOOOOOOOOOOPE! Information like this (a typed id) should just be another
    class outside of the models (e.g. at the DTO layer) that holds only an id.
[ ] Make sure exceptions are being logged!
    A: sir, yes sir!
[v] Make sure that a Specimen parent/child or from/to relationship can exist
    without a processing event. Maybe this could be done by:
    (1) Having one SpecimenProcessingLink table with:
        FROM_SPC_ID, TO_SPC_ID, PE_ID, AMOUNTS, ETC. - all optional
        UNIUQUE(FROM_SPC_ID, TO_SPC_ID, PE_ID)
        Only problem: how to add "inputs" to a PE to select from. How about just
        SpecimenProcessingEventInput class/ relationship. DONE
    (2) Something else (more?) complicated?
    A: made a ProcessingEventInputSpecimen class and have the SpecimenProcessingLink
    class use the (input, output, timeDone) as the natural id
[x] Call property 'isDerived'?
    A: called it "isDerivative()" and put it on Specimen, since this property does
    not change depending on its study.
[ ] Group models and actions into domains, such as, user, report, center, shipping,
    etc. and actions/ services into those groups so that there are not so many
    classes per package.
    A: sure?
[v] Also record the user that inserted the object and the last user to modify
    object?
[ ] Switch the ExecutingUser "stuff" to use DI.
[v] Change annotations so that they use InheritanceType.JOINED, only for the
    annotation id (so unique across all sub-types), but put the type, data, and
    options in a separate (joined) table.
    A: DO IT! Most efficient, Maybe have the ID come from another table in a
    Has-a relationship so we don't HAVE to join but can use a shared globally
    unique PK. And it shall be called... AnnotationAnchor?
[~] Where possible, use EqualsBuilder and HashcodeBuilder for readability.
	A: okay, but see note about entity equals and hashcode (should just be using
	the default methods [i.e. referrential equality])
[x] Seriously consider override the equals and hashcode methods of model objects
    to be based on the natural id (e.g. collection event uses patient & visit
    number).
    A: NOPE! use referrential equality! See https://community.jboss.org/wiki/EqualsAndHashCode
[v] Bring over the Sha1Hash and Md5Hash objects
[ ] For unique strings, hash the string instead.
[v] Make the combination of PE (worksheet, center) or (worksheet, study) unique?
    A: Yes. Done.
[v] Q: should SpecimenProcessingLink be between two SpecimenProcessingNode-s
    so that extra information can be stored on the nodes, not just the link?
    so that processing events can have nodes added to them first with the links
    added later?
    A: Yes. Done as 'SpecimenProcessingEvent' and added a 
    'SpecimenProcessingEventAnnotation' object as well.
[v] Q: consider having only SpecimenProcessingLink and not SpecimenProcessing
	Because why bother with two types of definitions when both can be represented
	by one class?
	A: Yes. Done.
[ ] Reports should be global or center-, study-, or center-study-specific.
[ ] Prefix all report objects with "Report" so it's more clear what objects
 	are involved?
[v] Get rid of "Abstract" from model names. They're declared as abstract and can't
    be directly instantiated, just make the class name shorter...
[ ] Make annotation type requirements for specific collection event types and/or
	specimen groups?
[ ] Q: How do contacts work again?
	A: make ContactUsers that function like StudyCenter-s
[v] Q: Who makes StudyCenter-s?
	A: Studies make the link?
[v] Dispatch should be StudyCenter <-> StudyCenter
[v] *Requests made for dispatches, clarify this process
	- requires thinking
[v] Shipments should now just be Dispatches
	- Yes
[v] Specimen will have a originCenter and currentCenter and no originInfo
	[v] Remove OriginInfo
[v] Q: Make SpecimenPosition and ContainerPosition either:
	(1) immutable
	(2) embeddable
	A: Made them immutable but not embeddable so could have constraints
	on the entity, and also because not all specimens and containers will
	have a position.
	[v] Replace Row/Col with a `position` column
	A: yes, done, sorta
[ ] Standardization of HasCreationTime and HasLastModifiedTime
	- Call them HasInsertedAt and HasUpdatedAt to remove ambiguity and 
	[v] add listeners to update the properties
	[ ] override date type to save to a decimal(17,3) or a long or something so
		can have millisecond precision in mysql db
[v] *Specimen CreatedAt vs TimeDrawn, etc.
	Q: Are specimens from an organism and aliquots the result of aliquotting?
	Does "samples" include both? CreatedAt would just be the phyiscal time a
	sample is created/ drawn (e.g. whenever it's put in its tube).
[v] Specimen vs Aliquot objects
	Q: Represent them as the same object?
	A: Yes! Otherwise very complicated doubling of relationships, everywhere.
[ ] CollectionType/ProcessingType instead of SourceSpecimen/AliquotedSpecimen?
	- Yes
[ ] Attributes
	- Yes
	- Consider type validation (e.g. legal options, legal regex, legal range).
	- Consider calling "Annotations"?
	- Share annotations in a pool, per study? Parent studies? (inherit definitions?)
[v] Remove "edu.ualberta.med.biobank.model" from all the validation messages... 
	it's just clutter
	- Yes
[ ] *Split Membership into StudyMembership and CenterMembership? But then how 
	does a center (or study) control which users can work on a given study? 
	Is that necessary?
	A: get more feedback from aaron
	A2: could just have a set of specific studies or default "all studies"
	on the CenterMembership
[v] Rename name to description, don't make unique, rename nameShort to name?
	- Yes
[ ] Put validation on interfaces to be shared by DTOs and Data model?
	- Yes
[ ] Splitting model into abstract classes and then transient methods?
	- Yes, investigate/ try
[ ] Watch out for FK.sql-s, renaming columns
[v] Get rid of activity status in a lot of places?
	- Yes, replace with either (1) enabled/ disabled (2) active/ inactive (e.g. Study/Center)
	[ ] - SpecimenFlag/Comment thing that is put on a (potentially huge) set of specimens.
		- have a flag from a global list of definied options, with clarifying comment
	which will take the idea of "flagged"
[v] Eliminate old "Shipment" and rename Dispatch to "Shipment"
[v] *Labeling Scheme refactoring?
	- Probably replace "Row Col" with "index"?
[ ] **Think about how to deal with translation of global objects, such as,
	Role, Environment, TubeType, etc.
	A: Possibly _don't_. Just assume that everyone within a server is communicating in
	the same language?
[v] ProcessingEvent <-> Specimen and children
	- Yes, discuessed already
[v] Collection Event types
[v] Q: Sent samples freezer?
	A: create a CenterLocation, and assign the specimens to it
[v] *Think more about differences between Shipment/ Dispatch/ Request because the workflow
	and intent seems quite different.
	Shipment - recording incoming things
	Dispatch - decide and record outgoing things, then incoming
	Request - 
	[x] Perhaps Shipment references a Manifest with specimens and shipment info?
[v] Update boolean primitives to be Boolean objects so can better search by example
[v] *SpecimenType refactoring
[v] *ContainerType refactoring
[ ] *Think of the SpecimenLog/SpecimenEvent as a list of things being done to specimens,
	not so much as the action being called on them. If 30,000 specimens are thawed, then
	there should be 30,000 events recorded on each of them.
[v] Dispatch containers AND specimens, but then product barcode must be globally unique!
[x] Global list of tube types, defined however, centers can make their own groups of tube
	types and then have their CT have a list of those
	A: hopefully answered by sharing the usage of ContainerType-s
[v] Aaron would like the sample-type restriction to be able to be assigned at any level
	(e.g. freezer, hotel, pallet)
[ ] *Server API should have multiple versions that we support? *shudder*
[v] Specimen should have an amount and unit (e.g. volume, mass, punches remaining?, etc.)?
[v] Specimen-s should have a SpecimenTree for their family, which has the Patient and
	then can have a single CollectionEvent.
[x] Q: Study-s can have an share Protocol-s. Protocol-s could be independently managed or
	owned by a single Study?
	A: too complicated for now, just do Study-s
[v] How to deal with 96 well plates where the wells do not have ids, only the plate does?
	A: fine, but all specimens should still have an inventory id for referencing them,
	whether it's attached or not.
[ ] Check ValidityAuditStrategy when it comes to ids that are join-table ids, it doesn't 
	seem to update unless not add
* requires thought/ feedback

=-=-=-=-=-=-=-=-=-=

THOUGHTS ON: ANNOTATIONS

Have an abstract Annotation class with JOINED InheritanceType

For: Patient, CollectionEvent, Specimen, Shipment/Dispatch?

THOUGHTS ON: DYNAMIC-ISH CONTAINER TYPES

- have different naming stategies, e.g. enumerated (just a list) and 2d? Then centers can create
their own naming scheme that uses a (code-based) strategy?

QUESTIONS FOR TECHS/ BRUCE

Q1: Can a specimen ever be part of no study?
	A: No
	Can a specimen be part of more than one study?
	A: No
	Can a specimen move to a different study?
	A: Yes
	Can data be collected in multiple studies?
	A: Yes

Q2: Can a specimen have more than one parent?
	A: Yes
	From more than one patient?
	A: Yes, but very unlikely. Parentage study?
	From more than one collection event?
	A: Yes, but unlikely