<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
    "-//Hibernate/Hibernate Configuration DTD 3.0//EN"
    "http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<!-- Properties for the session factory -->

		<!-- MySQL paramerters start -->
		<property name="connection.driver_class">com.mysql.jdbc.Driver</property>
		<property name="connection.url">jdbc:mysql://localhost:3306/biobank</property>
        <!-- MySQL paramerters end -->

        <!-- HSQL DB paramerters start -->
        <!--
        <property name="connection.driver_class">org.hsqldb.jdbcDriver</property>
        <property name="connection.url">jdbc:hsqldb:data/biobank</property>
        -->
        <!-- HSQL DB paramerters end -->

        <property name="connection.username">dummy</property>
        <property name="connection.password">ozzy498</property>

		<property name="c3p0.max_size">10</property>
		<property name="c3p0.min_size">2</property>
		<property name="c3p0.timeout">5000</property>
		<!-- ZERO because when hibernate calls `result = conn.prepareStatement(
			sql );` (in AbstractBatcher) a PreparedStatement is returned by c3p0 that
			already has batches in it, so, if it was executed immediately, it would already
			insert rows, even though we never told it to add any, see this bug: http://sourceforge.net/tracker/?func=detail&aid=3019762&group_id=25357&atid=383690
			Possible fixes are for us to call clearBatch() on the ps, or to use another
			connection pooler -->
		<property name="c3p0.max_statements">0</property>
		<property name="c3p0.idle_test_period">3000</property>
		<property name="c3p0.acquire_increment">2</property>
		<property name="c3p0.validate">false</property>
		<property name="show_sql">false</property>
		<property name="dialect">org.hibernate.dialect.MySQL5InnoDBDialect</property>
		<property name="max_fetch_depth">1</property>
		<property name="bytecode.use_reflection_optimizer">false</property>
		<property name="jdbc.batch_versioned_data">true</property>
		<property name="jdbc.use_streams_for_binary">true</property>
		<property name="cache.use_query_cache">false</property>
		<property name="cache.provider_class">org.hibernate.cache.EhCacheProvider</property>
		<!-- Envers properties -->
		<property name="org.hibernate.envers.audit_table_suffix">_audit</property>
		<property name="org.hibernate.envers.revision_field_name">REVISION_ID</property>
		<property name="org.hibernate.envers.revision_type_field_name">REVISION_TYPE</property>
		<!-- Note that as of 3.6.10 the following configuration options were added
			and should be regarded as experimental only... -->
		<property name="org.hibernate.envers.audit_strategy">org.hibernate.envers.strategy.ValidityAuditStrategy</property>
		<property name="org.hibernate.envers.audit_strategy_validity_end_rev_field_name">END_REVISION_ID</property>
		<property name="org.hibernate.envers.audit_strategy_validity_revend_timestamp_field_name">END_REVISION_TIME</property>
		<!-- Turn off default Hibernate Bean Validator, only apply constraints
			to the database schema when generated with Hibernate -->
		<property name="javax.persistence.validation.mode">ddl</property>
		<!-- Mapped package loads package-info.java, which contains package-wide
			information, such as, @TypeDefs -->
		<mapping package="edu.ualberta.med.biobank.model" />
		<!-- Mapped classes -->
		<mapping class="edu.ualberta.med.biobank.model.AbstractPosition" />
		<mapping class="edu.ualberta.med.biobank.model.Address" />
		<mapping class="edu.ualberta.med.biobank.model.AnatomicalSource" />
		<mapping class="edu.ualberta.med.biobank.model.Group" />
		<mapping class="edu.ualberta.med.biobank.model.Capacity" />
		<mapping class="edu.ualberta.med.biobank.model.Center" />
		<mapping class="edu.ualberta.med.biobank.model.CollectionEvent" />
		<mapping class="edu.ualberta.med.biobank.model.CollectionEventType" />
		<mapping class="edu.ualberta.med.biobank.model.Comment" />
		<mapping class="edu.ualberta.med.biobank.model.Contact" />
		<mapping class="edu.ualberta.med.biobank.model.Container" />
		<mapping class="edu.ualberta.med.biobank.model.ContainerLabelingScheme" />
		<mapping class="edu.ualberta.med.biobank.model.ContainerPosition" />
		<mapping class="edu.ualberta.med.biobank.model.ContainerType" />
		<mapping class="edu.ualberta.med.biobank.model.Dispatch" />
		<mapping class="edu.ualberta.med.biobank.model.DispatchSpecimen" />
		<mapping class="edu.ualberta.med.biobank.model.Domain" />
		<mapping class="edu.ualberta.med.biobank.model.EntityColumn" />
		<mapping class="edu.ualberta.med.biobank.model.EntityFilter" />
		<mapping class="edu.ualberta.med.biobank.model.Entity" />
		<mapping class="edu.ualberta.med.biobank.model.EntityProperty" />
		<mapping class="edu.ualberta.med.biobank.model.EventAttr" />
		<mapping class="edu.ualberta.med.biobank.model.EventAttrType" />
		<mapping class="edu.ualberta.med.biobank.model.GlobalEventAttr" />
		<mapping class="edu.ualberta.med.biobank.model.JasperTemplate" />
		<mapping class="edu.ualberta.med.biobank.model.Membership" />
		<mapping class="edu.ualberta.med.biobank.model.Patient" />
		<mapping class="edu.ualberta.med.biobank.model.PreservationType" />
		<mapping class="edu.ualberta.med.biobank.model.Principal" />
		<mapping class="edu.ualberta.med.biobank.model.PrintedSsInvItem" />
		<mapping class="edu.ualberta.med.biobank.model.PrinterLabelTemplate" />
		<mapping class="edu.ualberta.med.biobank.model.ProcessingEvent" />
		<mapping class="edu.ualberta.med.biobank.model.ProcessingType" />
		<mapping class="edu.ualberta.med.biobank.model.PropertyModifier" />
		<mapping class="edu.ualberta.med.biobank.model.PropertyType" />
		<mapping class="edu.ualberta.med.biobank.model.ReportColumn" />
		<mapping class="edu.ualberta.med.biobank.model.ReportFilter" />
		<mapping class="edu.ualberta.med.biobank.model.ReportFilterValue" />
		<mapping class="edu.ualberta.med.biobank.model.Report" />
		<mapping class="edu.ualberta.med.biobank.model.Request" />
		<mapping class="edu.ualberta.med.biobank.model.RequestSpecimen" />
		<mapping class="edu.ualberta.med.biobank.model.Revision" />
		<mapping class="edu.ualberta.med.biobank.model.Role" />
		<mapping class="edu.ualberta.med.biobank.model.ShipmentInfo" />
		<mapping class="edu.ualberta.med.biobank.model.ShippingMethod" />
		<mapping class="edu.ualberta.med.biobank.model.SourceSpecimen" />
		<mapping class="edu.ualberta.med.biobank.model.Specimen" />
		<mapping class="edu.ualberta.med.biobank.model.SpecimenGroup" />
		<mapping class="edu.ualberta.med.biobank.model.SpecimenPosition" />
		<mapping class="edu.ualberta.med.biobank.model.SpecimenProcessing" />
		<mapping class="edu.ualberta.med.biobank.model.SpecimenProcessingLink" />
		<mapping class="edu.ualberta.med.biobank.model.SpecimenProcessingType" />
		<mapping class="edu.ualberta.med.biobank.model.SpecimenProcessingLinkType" />
		<mapping class="edu.ualberta.med.biobank.model.SpecimenType" />
		<mapping class="edu.ualberta.med.biobank.model.StudyEventAttr" />
		<mapping class="edu.ualberta.med.biobank.model.Study" />
		<mapping class="edu.ualberta.med.biobank.model.StudyCenter" />
		<mapping class="edu.ualberta.med.biobank.model.Unit" />
		<mapping class="edu.ualberta.med.biobank.model.User" />
		<mapping class="edu.ualberta.med.biobank.model.Vessel" />

		<event type="pre-update">
			<listener class="edu.ualberta.med.biobank.validator.BeanValidationHandler" />
			<listener class="edu.ualberta.med.biobank.model.listener.ValidEndRevisionListener" />
			<listener class="edu.ualberta.med.biobank.model.listener.TimeUpdatedListener" />
		</event>
		<event type="pre-insert">
			<listener class="edu.ualberta.med.biobank.validator.BeanValidationHandler" />
			<listener class="edu.ualberta.med.biobank.model.listener.UpdateRevisionCommittedAtListener" />
			<listener class="edu.ualberta.med.biobank.model.listener.TimeInsertedListener" />
		</event>
		<event type="pre-delete">
			<listener class="edu.ualberta.med.biobank.validator.BeanValidationHandler" />
		</event>
		<event type="pre-collection-update">
			<listener class="edu.ualberta.med.biobank.validator.BeanValidationHandler" />
			<listener class="org.hibernate.envers.event.AuditEventListener" />
		</event>
		<event type="pre-collection-recreate">
			<listener class="edu.ualberta.med.biobank.validator.BeanValidationHandler" />
		</event>
		<event type="pre-collection-remove">
			<listener class="edu.ualberta.med.biobank.validator.BeanValidationHandler" />
			<listener class="org.hibernate.envers.event.AuditEventListener" />
		</event>
		<event type="post-insert">
			<listener class="org.hibernate.envers.event.AuditEventListener" />
		</event>
		<event type="post-update">
			<listener class="org.hibernate.envers.event.AuditEventListener" />
		</event>
		<event type="post-delete">
			<listener class="org.hibernate.envers.event.AuditEventListener" />
		</event>
		<event type="post-collection-recreate">
			<listener class="org.hibernate.envers.event.AuditEventListener" />
		</event>
	</session-factory>
</hibernate-configuration>
