edu.ualberta.med.biobank.model.AbstractPosition.col.Min=Column must be at least ${attributes.value}.
edu.ualberta.med.biobank.model.AbstractPosition.col.NotNull=Column is required.
edu.ualberta.med.biobank.model.AbstractPosition.positionString.NotNull=Position string is required.
edu.ualberta.med.biobank.model.AbstractPosition.row.Min=Row must be at least ${attributes.value}.
edu.ualberta.med.biobank.model.AbstractPosition.row.NotNull=Row is required.
edu.ualberta.med.biobank.model.Address.city.NotEmpty=City is required.
edu.ualberta.med.biobank.model.BbGroup.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.BbGroup.Unique[name]=A group with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Capacity.colCapacity.Min=Column capacity must be at least ${attribute.value}.
edu.ualberta.med.biobank.model.Capacity.colCapacity.NotNull=Column capacity is required.
edu.ualberta.med.biobank.model.Capacity.rowCapacity.Min=Row capacity must be at least ${attribute.value}.
edu.ualberta.med.biobank.model.Capacity.rowCapacity.NotNull=Row capacity is required.
edu.ualberta.med.biobank.model.Center.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.Center.address.NotNull=Address is required.
edu.ualberta.med.biobank.model.Center.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.Center.nameShort.NotEmpty=Short name is required.
edu.ualberta.med.biobank.model.Center.Unique[name]=A center with the name '${validatedValue.name}' aldready exists.
edu.ualberta.med.biobank.model.Center.Unique[nameShort]=A center with the short name '${validatedValue.nameShort}' already exists.
edu.ualberta.med.biobank.model.Clinic.NotUsed.Study.contactCollection.clinic=Clinic '${validatedValue.name}' is used by at least one study's contact.
edu.ualberta.med.biobank.model.CollectionEvent.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.CollectionEvent.Empty.allSpecimenCollection=Collection event '${validatedValue.visitNumber}' of patient '${validatedValue.patient.pnumber}' still has specimens.
edu.ualberta.med.biobank.model.CollectionEvent.patient.NotNull=Patient is required.
edu.ualberta.med.biobank.model.CollectionEvent.Unique[patient,visitNumber]=Visit number '${validatedValue.visitNumber}' already exists for patient '${validatedValue.patient.pnumber}'.
edu.ualberta.med.biobank.model.CollectionEvent.visitNumber.Min=Visit number must be at least ${attributes.value}.
edu.ualberta.med.biobank.model.CollectionEvent.visitNumber.NotNull=Visit number is required.
edu.ualberta.med.biobank.model.Comment.message.NotNull=Message is required.
edu.ualberta.med.biobank.model.Comment.user.NotNull=User is required.
edu.ualberta.med.biobank.model.Contact.Empty.studyCollection=Contact '${validatedValue.name}' is still associated with studies.
edu.ualberta.med.biobank.model.Contact.name.NotNull=Name is required.
edu.ualberta.med.biobank.model.Container.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.Container.containerType.NotNull=Container type is required.
edu.ualberta.med.biobank.model.Container.Empty.childPositionCollection=Container '${validatedValue.label}' still has child containers.
edu.ualberta.med.biobank.model.Container.Empty.specimenPositionCollection=Container '${validatedValue.label}' still has specimens.
edu.ualberta.med.biobank.model.Container.label.NotEmpty=Label is required.
edu.ualberta.med.biobank.model.Container.path.NotEmpty=Path is required.
edu.ualberta.med.biobank.model.ContainerPosition.container.NotNull=A container is required.
edu.ualberta.med.biobank.model.ContainerPosition.parentContainer.NotNull=A parent container is required.
edu.ualberta.med.biobank.model.ContainerPosition.Unique[parentContainer,row,col]=Container '${validatedValue.parentContainer.label}' already has a container at this position.
edu.ualberta.med.biobank.model.Container.productBarcode.NotEmpty=Product barcode is required.
edu.ualberta.med.biobank.model.Container.site.NotNull=Site is required.
edu.ualberta.med.biobank.model.ContainerType.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.ContainerType.capacity.NotNull=Capacity is required.
edu.ualberta.med.biobank.model.ContainerType.childLabelingScheme.NotNull=Child labeling scheme is required.
edu.ualberta.med.biobank.model.ContainerType.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.ContainerType.nameShort.NotEmpty=Short name is required.
edu.ualberta.med.biobank.model.ContainerType.NotUsed.Container.containerType=Container type '${validatedValue.name}' is used by at least one container.
edu.ualberta.med.biobank.model.ContainerType.NotUsed.ContainerType.childContainerTypeCollection=Container type '${validatedValue.name}' is a child of at least one other container type.
edu.ualberta.med.biobank.model.ContainerType.NotUsed.ContainerType.parentContainerTypeCollection=Container type '${validatedValue.name}' is a parent of at least one other container type.
edu.ualberta.med.biobank.model.ContainerType.site.NotNull=Site is required.
edu.ualberta.med.biobank.model.ContainerType.Unique[site,name]=A container type with the name '${validatedValue.name}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.ContainerType.Unique[site,nameShort]=A container type with the short name '${validatedValue.nameShort}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.Container.Unique[site,containerType,label]=A container with the type '${validatedValue.containerType.name}' and the label '${validatedValue.label}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.Container.Unique[site,productBarcode]=A container with the product barcode '${validatedValue.productBarcode}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.Dispatch.receiverCenter.NotNull=Receiver center is required.
edu.ualberta.med.biobank.model.Dispatch.senderCenter.NotNull=Sender center is required.
edu.ualberta.med.biobank.model.DispatchSpecimen.dispatch.NotNull=Dispatch is required.
edu.ualberta.med.biobank.model.DispatchSpecimen.specimen.NotNull=Specimen is required.
edu.ualberta.med.biobank.model.DispatchSpecimen.state.NotNull=State is required.
edu.ualberta.med.biobank.model.Dispatch.state.NotNull=State is required.
edu.ualberta.med.biobank.model.Entity.className.NotEmpty=Entity class name is required.
edu.ualberta.med.biobank.model.EntityColumn.entityProperty.NotNull=Entity property is required.
edu.ualberta.med.biobank.model.EntityColumn.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.EntityFilter.entityProperty.NotNull=Entity property is required.
edu.ualberta.med.biobank.model.EntityFilter.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.Entity.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.EntityProperty.property.NotEmpty=Property is required.
edu.ualberta.med.biobank.model.EntityProperty.propertyType.NotNull=Property type is required.
edu.ualberta.med.biobank.model.EventAttr.collectionEvent.NotNull=Collection event is required.
edu.ualberta.med.biobank.model.EventAttr.studyEventAttr.NotNull=Study event attribute is required.
edu.ualberta.med.biobank.model.EventAttrType.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.GlobalEventAttr.eventAttrType.NotNull=Event attribute type is required.
edu.ualberta.med.biobank.model.GlobalEventAttr.label.NotEmpty=Label is required.
edu.ualberta.med.biobank.model.GlobalEventAttr.Unique[label]=A global event attribute with the label '${validatedValue.label}' already exists.
edu.ualberta.med.biobank.model.JasperTemplate.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.JasperTemplate.Unique[name]=A jasper template with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.JasperTemplate.xml.NotEmpty=XML is required.
edu.ualberta.med.biobank.model.Membership.principal.NotNull=A principal (user or group) is required.
edu.ualberta.med.biobank.model.Membership.Unique[principal,center,study]=This user or group already has a membership for center '${validatedValue.center.name}' and study '${validatedValue.study.name}'. Modify that membership instead.
edu.ualberta.med.biobank.model.OriginInfo.center.NotNull=An originating center is required.
edu.ualberta.med.biobank.model.Patient.createdAt.NotNull=A creation time is required.
edu.ualberta.med.biobank.model.Patient.Empty.collectionEventCollection=Patient '${validatedValue.pnumber}' still has collection events.
edu.ualberta.med.biobank.model.Patient.NotUsed.Specimen.patient=Patient '${validatedValue.pnumber}' is used by at least one specimen.
edu.ualberta.med.biobank.model.Patient.pnumber.NotEmpty=Patient number is required.
edu.ualberta.med.biobank.model.Patient.study.NotNull=Study is required.
edu.ualberta.med.biobank.model.Patient.Unique[pnumber]=A patient with number '${validatedValue.pnumber}' already exists.
edu.ualberta.med.biobank.model.PrintedSsInvItem.txt.NotEmpty=Text is required.
edu.ualberta.med.biobank.model.PrintedSsInvItem.Unique[txt]=An inventory item with text '${validatedValue.txt}' has already been printed.
edu.ualberta.med.biobank.model.PrinterLabelTemplate.jasperTemplate.NotNull=Jasper template is required.
edu.ualberta.med.biobank.model.PrinterLabelTemplate.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.PrinterLabelTemplate.Unique[name]=A printer label template with name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.ProcessingEvent.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.ProcessingEvent.center.NotNull=A center is required.
edu.ualberta.med.biobank.model.ProcessingEvent.createdAt.NotNull=A creation time is required.
edu.ualberta.med.biobank.model.ProcessingEvent.NotUsed.Specimen.parentSpecimen.processingEvent=Processing event '${validatedValue.worksheet}' (created ${validatedValue.createdAt}) already has derived specimens.
edu.ualberta.med.biobank.model.ProcessingEvent.NotUsed.Specimen.processingEvent=Processing event '${validatedValue.worksheet}' is used by at least one specimen.
edu.ualberta.med.biobank.model.ProcessingEvent.worksheet.NotEmpty=Worksheet is required.
edu.ualberta.med.biobank.model.PropertyModifier.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.PropertyType.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.Report.entity.NotNull=Entity is required.
edu.ualberta.med.biobank.model.Report.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.Request.address.NotNull=Address is required.
edu.ualberta.med.biobank.model.Request.created.NotNull=A creation time is required.
edu.ualberta.med.biobank.model.Request.researchGroup.NotNull=Research group is required.
edu.ualberta.med.biobank.model.RequestSpecimen.request.NotNull=Request is required.
edu.ualberta.med.biobank.model.RequestSpecimen.specimen.NotNull=Specimen is required.
edu.ualberta.med.biobank.model.RequestSpecimen.state.NotNull=State is required.
edu.ualberta.med.biobank.model.Role.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.Role.NotUsed.Membership.roleCollection=Role '${validatedValue.name}' is used by at least one user or group's membership.
edu.ualberta.med.biobank.model.Role.Unique[name]=Name '${validatedValue.name}' is already taken.
edu.ualberta.med.biobank.model.ShipmentInfo.packedAt.NotNull=A packing time is required.
edu.ualberta.med.biobank.model.ShipmentInfo.shippingMethod.NotNull=Shipping method is required.
edu.ualberta.med.biobank.model.ShippingMethod.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.ShippingMethod.NotUsed.ShipmentInfo.shippingMethod=Shipping method '${validatedValue.name}' is used by at least one shipment information.
edu.ualberta.med.biobank.model.ShippingMethod.Unique[name]=A shipping method with name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Site.Empty.containerCollection=Site '${validatedValue.name}' still has containers.
edu.ualberta.med.biobank.model.Site.Empty.containerTypeCollection=Site '${validatedValue.name}' still has containers types.
edu.ualberta.med.biobank.model.Site.Empty.processingEventCollection=Site '${validatedValue.name}' still has processing events.
edu.ualberta.med.biobank.model.SourceSpecimen.specimenType.NotNull=Specimen type is required.
edu.ualberta.med.biobank.model.SourceSpecimen.study.NotNull=Study is required.
edu.ualberta.med.biobank.model.Specimen.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.Specimen.collectionEvent.NotNull=Collection event is required.
edu.ualberta.med.biobank.model.Specimen.currentCenter.NotNull=Current center is required.
edu.ualberta.med.biobank.model.Specimen.Empty.childSpecimenCollection=Specimen '${validatedValue.inventoryId}' still has child specimens.
edu.ualberta.med.biobank.model.Specimen.inventoryId.NotEmpty=Inventory ID is required.
edu.ualberta.med.biobank.model.Specimen.originInfo.NotNull=Originating center is required.
edu.ualberta.med.biobank.model.SpecimenPosition.container.NotNull=Container is required.
edu.ualberta.med.biobank.model.SpecimenPosition.specimen.NotNull=Specimen is required.
edu.ualberta.med.biobank.model.SpecimenPosition.Unique[container,row,col]=Container '${validatedValue.container.label}' already has a specimen at position '${validatedValue.positionString}'.
edu.ualberta.med.biobank.model.Specimen.quantity.Min=Quantity must be at least ${attributes.value}.
edu.ualberta.med.biobank.model.Specimen.specimenType.NotNull=Specimen type is required.
edu.ualberta.med.biobank.model.SpecimenType.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.SpecimenType.nameShort.NotEmpty=Short name is required.
edu.ualberta.med.biobank.model.SpecimenType.NotUsed.AliquotedSpecimen.specimenType=Specimen type '${validatedValue.name}' is used by at least one aliquoted specimen.
edu.ualberta.med.biobank.model.SpecimenType.NotUsed.SourceSpecimen.specimenType=Specimen type '${validatedValue.name}' is used by at least one source specimen.
edu.ualberta.med.biobank.model.SpecimenType.NotUsed.Specimen.specimenType=Specimen type '${validatedValue.name}' is used by at least one specimen.
edu.ualberta.med.biobank.model.SpecimenType.NotUsed.SpecimenType.childSpecimenTypeCollection=Specimen type '${validatedValue.name}' is a child of at least one other container type.
edu.ualberta.med.biobank.model.SpecimenType.NotUsed.SpecimenType.parentSpecimenTypeCollection=Specimen type '${validatedValue.name}' is a parent of at least one other container type.
edu.ualberta.med.biobank.model.SpecimenType.Unique[name]=A specimen type with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.SpecimenType.Unique[nameShort]=A specimen type with the short name '${validatedValue.nameShort}' already exists.
edu.ualberta.med.biobank.model.Specimen.Unique[inventoryId]=A specimen with inventory ID '${validatedValue.inventoryId}' already exists.
edu.ualberta.med.biobank.model.Study.activityStatus.NotEmpty=Activity status is required.
edu.ualberta.med.biobank.model.Study.Empty.patientCollection=Study '${validatedValue.name}' still has patients.
edu.ualberta.med.biobank.model.StudyEventAttr.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.StudyEventAttr.globalEventAttr.NotNull=Global event attribute is required.
edu.ualberta.med.biobank.model.StudyEventAttr.NotUsed.EventAttr.studyEventAttr=Study ('${validatedValue.study.name}') event attribute '${validatedValue.globalEventAttr.label}' is used by at least one event attribute and collection event.
edu.ualberta.med.biobank.model.StudyEventAttr.study.NotNull=Study is required.
edu.ualberta.med.biobank.model.Study.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.Study.nameShort.NotEmpty=Short name is required.
edu.ualberta.med.biobank.model.Study.Unique[name]=A study with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Study.Unique[nameShort]=A study with the short name '${validatedValue.nameShort}' already exists.
edu.ualberta.med.biobank.model.User.csmUserId.NotEmpty=CSM user ID is required.
edu.ualberta.med.biobank.model.User.login.NotEmpty=Login is required.
edu.ualberta.med.biobank.model.User.Unique[login]=A user with the login '${validatedValue.login}' already exists.
# TODO: give ContainerPosition a positionString attribute or use a function to determine it. Just displaying the row and col is not great
# TODO: it would be nice to push name/ login into principal so we can refer to it as something.
# TODO: many Report* model objects are missing validation.
# TODO: where is positionString now?
