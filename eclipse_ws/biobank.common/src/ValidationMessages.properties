edu.ualberta.med.biobank.model.AbstractPosition.col.Min=Column must be at least ${attributes.value}.
edu.ualberta.med.biobank.model.AbstractPosition.col.NotNull=Column is required.
# TODO: where is positionString now?
edu.ualberta.med.biobank.model.AbstractPosition.positionString.NotNull=Position string is required.
edu.ualberta.med.biobank.model.AbstractPosition.row.Min=Row must be at least ${attributes.value}.
edu.ualberta.med.biobank.model.AbstractPosition.row.NotNull=Row is required.
edu.ualberta.med.biobank.model.Address.city.NotEmpty=City is required.
edu.ualberta.med.biobank.model.BbGroup.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.BbGroup.name.Unique=A group with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Capacity.colCapacity.Min=Column capacity must be at least ${attribute.value}.
edu.ualberta.med.biobank.model.Capacity.colCapacity.NotNull=Column capacity is required.
edu.ualberta.med.biobank.model.Capacity.rowCapacity.Min=Row capacity must be at least ${attribute.value}.
edu.ualberta.med.biobank.model.Capacity.rowCapacity.NotNull=Row capacity is required.
edu.ualberta.med.biobank.model.Center.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.Center.address.NotNull=Address is required.
edu.ualberta.med.biobank.model.Center.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.Center.name.Unique=A center with the name '${validatedValue.name}' aldready exists.
edu.ualberta.med.biobank.model.Center.nameShort.NotEmpty=Short name is required.
edu.ualberta.med.biobank.model.Center.nameShort.Unique=A center with the short name '${validatedValue.nameShort}' already exists.
edu.ualberta.med.biobank.model.CollectionEvent.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.CollectionEvent.patient.NotNull=Patient is required.
edu.ualberta.med.biobank.model.CollectionEvent.visitNumber.Min=Visit number must be at least ${attributes.value}.
edu.ualberta.med.biobank.model.CollectionEvent.visitNumber.NotNull=Visit number is required.
edu.ualberta.med.biobank.model.CollectionEvent.visitNumber.Unique=Visit number '${validatedValue.visitNumber}' already exists for patient '${validatedValue.patient.pnumber}'.
edu.ualberta.med.biobank.model.Comment.message.NotNull=Message is required.
edu.ualberta.med.biobank.model.Comment.user.NotNull=User is required.
edu.ualberta.med.biobank.model.Contact.name.NotNull=Name is required.
edu.ualberta.med.biobank.model.Container.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.Container.containerType.NotNull=Container type is required.
edu.ualberta.med.biobank.model.Container.label.NotEmpty=Label is required.
edu.ualberta.med.biobank.model.Container.path.NotEmpty=Path is required.
edu.ualberta.med.biobank.model.Container.label.Unique=A container with the type '${validatedValue.containerType.name}' and the label '${validatedValue.label}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.Container.productBarcode.Unique=Product barcode is required.
edu.ualberta.med.biobank.model.Container.productBarcode.Unique=A container with the product barcode '${validatedValue.productBarcode}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.Container.site.NotNull=Site is required.
edu.ualberta.med.biobank.model.ContainerPosition.container.NotNull=A container is required.
edu.ualberta.med.biobank.model.ContainerPosition.parentContainer.NotNull=A parent container is required.
# TODO: give ContainerPosition a positionString attribute or use a function to determine it. Just displaying the row and col is not great
edu.ualberta.med.biobank.model.ContainerPosition.position.Unique=Container '${validatedValue.parentContainer.label}' already has a container at this position.
edu.ualberta.med.biobank.model.ContainerType.activityStatus.NotNull=Activity status is required.
edu.ualberta.med.biobank.model.ContainerType.capacity.NotNull
edu.ualberta.med.biobank.model.ContainerType.childLabelingScheme.NotNull=Child labeling scheme is required.
edu.ualberta.med.biobank.model.ContainerType.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.ContainerType.name.Unique=A container type with the name '${validatedValue.name}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.ContainerType.nameShort.NotEmpty=Short name is required.
edu.ualberta.med.biobank.model.ContainerType.nameShort.Unique=A container type with the short name '${validatedValue.nameShort}' already exists at the ${validatedValue.site.name} site.
edu.ualberta.med.biobank.model.ContainerType.site.NotNull=Site is required.
edu.ualberta.med.biobank.model.Dispatch.receiverCenter.NotNull=Receiver center is required.
edu.ualberta.med.biobank.model.Dispatch.senderCenter.NotNull=Sender center is required.
edu.ualberta.med.biobank.model.Dispatch.state.NotNull=State is required.
edu.ualberta.med.biobank.model.DispatchSpecimen.dispatch.NotNull=Dispatch is required.
edu.ualberta.med.biobank.model.DispatchSpecimen.state.NotNull=State is required.
edu.ualberta.med.biobank.model.DispatchSpecimen.specimen.NotNull=Specimen is required.
edu.ualberta.med.biobank.model.Entity.className.NotEmpty=Entity class name is required.
edu.ualberta.med.biobank.model.Entity.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.EntityColumn.entityProperty.NotNull=Entity property is required.
edu.ualberta.med.biobank.model.EntityColumn.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.EntityFilter.entityProperty.NotNull=
edu.ualberta.med.biobank.model.EntityFilter.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.EntityProperty.property.NotEmpty=Property is required.
edu.ualberta.med.biobank.model.EntityProperty.propertyType.NotNull=Property type is required.
edu.ualberta.med.biobank.model.EventAttr.collectionEvent.NotNull=Collection event is required.
edu.ualberta.med.biobank.model.EventAttr.studyEventAttr.NotNull=Study event attribute is required.
edu.ualberta.med.biobank.model.EventAttrType.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.GlobalEventAttr.eventAttrType.NotNull=Event attribute type is required.
edu.ualberta.med.biobank.model.GlobalEventAttr.label.NotEmpty=Label is required.
edu.ualberta.med.biobank.model.GlobalEventAttr.label.Unique=A global event attribute with the label '${validatedValue.label}' already exists.
edu.ualberta.med.biobank.model.JasperTemplate.name.NotEmpty=Name is required.
edu.ualberta.med.biobank.model.JasperTemplate.name.Unique=A jasper template with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.JasperTemplate.xml.NotEmpty=XML is required.
edu.ualberta.med.biobank.model.Membership.principal.NotNull=A principal (user or group) is required.
# TODO: it would be nice to push name/ login into principal so we can refer to it as something.
edu.ualberta.med.biobank.model.Membership.realm.Unique=This user or group already has a membership for center '${validatedValue.center.name}' and study '${validatedValue.study.name}'. Modify that membership instead.
edu.ualberta.med.biobank.model.OriginInfo.center.NotNull=An originating center is required.
edu.ualberta.med.biobank.model.Patient.createdAt.NotNull=A creation time is required.
edu.ualberta.med.biobank.model.Patient.pnumber.NotEmpty=Patient number is required.
edu.ualberta.med.biobank.model.Patient.pnumber.Unique=A patient with number '${validatedValue.pnumber}' already exists.
edu.ualberta.med.biobank.model.Patient.study.NotNull=Study is required.
# TODO: LEFT OFF HERE
edu.ualberta.med.biobank.model.PrintedSsInvItem.txt.Unique=An inventory item with text '${validatedValue.txt}' has already been printed.
edu.ualberta.med.biobank.model.PrinterLabelTemplate.name.Unique=A printer label template with name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Role.name.Unique=Name '${validatedValue.name}' is already taken.
edu.ualberta.med.biobank.model.ShippingMethod.name.Unique=A shipping method with name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Specimen.inventoryId.Unique=A specimen with inventory ID '${validatedValue.inventoryId}' already exists.
edu.ualberta.med.biobank.model.SpecimenPosition.position.Unique=Container '${validatedValue.container.label}' already has a specimen at position '${validatedValue.positionString}'.
edu.ualberta.med.biobank.model.SpecimenType.name.Unique=A specimen type with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Study.name.Unique=A study with the name '${validatedValue.name}' already exists.
edu.ualberta.med.biobank.model.Study.nameShort.Unique=A study with the short name '${validatedValue.nameShort}' already exists.
edu.ualberta.med.biobank.model.User.login.Unique=A user with the login '${validatedValue.login}' already exists.

# TODO: expand the properties array more carefully? Does this work? Would be good to access properties from ognl context.
edu.ualberta.med.biobank.constraint.Unique.message=Properties ${attributes.properties} are already taken for ${validatedValue.class.name}.