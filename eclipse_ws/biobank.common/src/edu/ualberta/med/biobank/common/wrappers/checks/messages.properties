CapacityPostPersistChecks.row.column.capacity.error.msg=Row capacity and column capacity must be greater than or equal to zero.
ClinicPreDeleteChecks.delete.clinic.error.msg=Unable to delete clinic {0}. No more study reference should exist.
CollectionIsEmptyCheck.one.or.more.msg={0} {1} has one or more {2}.
ContainerPersistChecks.bad.container.type.msg=Container {0} does not allow inserts of container type {1}.
ContainerPersistChecks.missing.parent.msg=Container {0} does not have a parent container.
ContainerPersistChecks.missing.position.msg=Child container {0} must have a position.
ContainerPersistChecks.position.not.allowed.msg=Container {0} is a top-level container and is not allowed to have a parent or position.
ContainerPersistChecks.wrong.container.type.site.msg=Container {0} has a different site than its container type's site. The sites be the same.
ContainerPersistChecks.wrong.parent.site.msg=Container {0} has a different site than its parent container. The sites must be the same.
ContainerPositionAvailableCheck.unavailable.position.msg=Position {0}: {1} in container {2} is not available.
ContainerPositionInBoundsCheck.out.of.bounds.position.msg=Position {0}:{1} is invalid. Row should be between 0 and {2} (exclusive) and Col should be between 0 and {3} (exclusive).
ContainerTypePostPersistChecks.cannot.remove.child.container.type.msg=Unable to remove child type. This parent/child relationship exists in database. Remove all instances before attempting to delete a child type.
ContainerTypePostPersistChecks.cannot.remove.specimen.type.msg=Unable to remove specimen type. This parent/child relationship exists in database. Remove all instances before attempting to delete a sample type.
ContainerTypePostPersistChecks.insufficient.labeling.scheme.msg=Labeling scheme cannot label {0} rows and {1} columns.
ContainerTypePrePersistChecks.cannot.change.capacity.msg=Unable to alter dimensions. A container of this type exists in storage. Remove all instances before attempting to modify this container type.
ContainerTypePrePersistChecks.cannot.change.labeling.scheme.msg=Unable to change the "Child Labeling scheme" property. A container requiring this property exists in storage. Remove all instances before attempting to modify this container type.
ContainerTypePrePersistChecks.cannot.change.top.level.msg=Unable to change the "Top Level" property. A container requiring this property exists in storage. Remove all instances before attempting to modify this container type.
MembershipUniquePreCheck.exception.string=There already exists a membership with property value(s) ({1}) for ({2}), respectively. These field(s) must be unique.
NotNullPreCheck.exception.string=The {0} of {1} {2} must be defined (cannot be null).
NotUsedCheck.msg={0} {1} is still in use by {2}.
OriginInfoFromClinicCheck.waybill.not.allowed.msg=This clinic does not send shipments: waybill should not be set.
OriginInfoFromClinicCheck.waybill.required.msg=A waybill should be set on this shipment.
OriginInfoFromClinicCheck.waybill.used.msg=A shipment with waybill {0} already exist in clinic {1}.
PermissionPostCheck.right.privilege.association.error.msg=This permission contains privileges that are not supposed to be associated with this right
RolePreDeleteChecks.has.membership.msg=Unable to delete role {0}. It is used in at least one membership. Please remove it first.
SpecimenPostPersistChecks.children.without.processing.event=Specimen {0} has children but does not have a Processing Event. A Specimen must be part of a Processing Event to have children.
SpecimenPostPersistChecks.top.specimen.collection.event.unset=Specimen {0} is a top Specimen, but not part of its Collection Event's original specimen collection.
SpecimenPostPersistChecks.wrong.collection.event=Specimen {0} has a Collection Event which differs from it's parent or top Specimen.
UniqueCheck.exception.string=There already exists a {0} with property value(s) ({1}) for ({2}), respectively. These field(s) must be unique.
UniquePreCheck.exception.string=There already exists a {0} with property value(s) ({1}) for ({2}), respectively. These field(s) must be unique.
