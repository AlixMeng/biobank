To build model with caCORE SDK:
  - download caCORE SDK from here:
      http://ncicb.nci.nih.gov/infrastructure/cacoresdk
  - move file to <proj_dir>/caCORE
  - uncompress file in <proj_dir>/caCORE/sdk
  - move <proj_dir>/deploy.properties to <proj_dir>/caCORE/sdk/conf
  - change <proj_dir>/caCORE/sdk/conf/deploy.properties to suit your system:
       - DB_CONNECTION_URL
       - DB_USERNAME
       - DB_PASSWORD
       - DB_DRIVER
       - DB_DIALECT
  - in directory <proj_dir>/caCORE/sdk issue command: ant build-system
  - to generate database schema: cd to <proj_dir>/schema and run ant
  - copy <proj_dir>/caCORE/sdk/output/biobank2/package/webapp/biobank2.war to
    $JBOSS_HOME/server/default/deploy
  - copy <proj_dir>/caCORE/sdk/output/biobank2/build/jar/biobank2-beans.jar to
    <projdir>/eclipse_ws/biobank2/lib

MySQL Server
  - my.cnf must have "lower_case_table_names=1"


Git Repo now at:
  ssh://biobank@aicml-med.cs.ualberta.ca/home/biobank/gitrepo/biobank2.git

caCORE SDK Cascade Settings

For cascade model settings:

- Create a cascade setting Tag Definition (TD).  The format of the TD is:

        - NCI_CASCADE_ASSOCIATION#<<fully qualified rolename>>; e.g.,
          NCI_CASCADE_ASSOCIATION#gov.nih.nci.cacoresdk.domain.manytoone.unidirectional.Chef.restaurant

- Create a diagram that contains the classes that have the association link
  between them to which the cascade settings will be applied

- Select the association link within the diagram

- Select the 'Tagged Values' tab at the bottom of the ArgoUML editor for the
  association link

- For the tag key, select the Tag Definition you created above.  For the tag
  value, enter the cascade setting; e.g., 'save-update'.

- Make sure to save your changes.  ArgoUML as a tool is quirky at times, and
  the action of assigning a Tag Definition to and element does not always
  enable the save icon.

- There are several examples of the use of the NCI_CASCADE_ASSOCIATION tag with
  the supplied ArgoUML test file.  The association link between
  gov.nih.nci.cacoresdk.domain.manytoone.unidirectional.Chef and
  gov.nih.nci.cacoresdk.domain.manytoone.unidirectional.Restaurant is one
  example you can reference.  The Diagram is located under Model > Logical View
  > Logical Model > Diagrams > Many to One.

For primary key generation settings:

- Create required primary key generation Tag Definitions.  The format of the TD's is:

        - NCI_GENERATOR.<<db type>>; e.g., NCI_GENERATOR.oracle or
          NCI_GENERATOR.mysql

        - NCI_GENERATOR_PROPERTY<<property number>>.<<db type>>; e.g.,
          NCI_GENERATOR_PROPERTY1.oracle, NCI_GENERATOR_PROPERTY2.oracle, etc.,
          for as many primary key generation options as desired.

- After the Data Model have been created, select the Data Model table column
  (attribute) to which the primary key generation tag values should be applied

- Select the 'Tagged Values' tab at the bottom of the ArgoUML editor for the
  desired table column (attribute).

- For the tag key, select, one at a time, the Tag Definitions you created
  above.  For the tag value, enter the primary key generation option; e.g.,
  NCI_GENERATOR.oracle might have a value of 'hilo', and
  NCI_GENERATOR_PROPERTY1.oracle might have a value of 'table:hi_value',
  NCI_GENERATOR_PROPERTY2.oracle might have a value of 'column:next_value', and
  NCI_GENERATOR_PROPERTY3.oracle might have a value of 'max_lo:10000' .

- Make sure to save your changes.  ArgoUML as a tool is quirky at times, and
  the action of assigning a Tag Definition to and element does not always
  enable the save icon.

- There is one example of the use of the NCI_GENERATOR tags with the supplied
  ArgoUML test file, and it is located under Model > Logical View > Data Model
  > Table 'NO_ID_KEY', column 'MY_KEY'

For both primary key generation and cascade settings:

- Make sure the ENABLE_WRITABLE_API_EXTENSION property is set to true in the
  /conf/deploy.properties file BEFORE generating your system.

- Generate your system by executing the "build-system" target with the primary
  build.xml


Following code generation, primary key and cascade settings you have applied to
the model can be verified by opening the corresponding generated *.hbm.xml file
located within the /output/<<project name>>/src/ sub-folders.

BBPDB EXPORT
- use Bullzip Access to Mysql to export data to MySQL


CORRUPTION TEST
CORRUPTION TEST2
